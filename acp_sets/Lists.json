[
    {
        "question": "What data structure is capable of storing heterogeneous items?",
        "answer": "List"
    },
    {
        "question": "What allows concise and efficient transformations in lists?",
        "answer": "List comprehensions"
    },
    {
        "question": "What method retrieves a subset of a list?",
        "answer": "Slicing"
    },
    {
        "question": "Which method orders a list?",
        "answer": "Sort"
    },
    {
        "question": "What function allows custom sorting of a list?",
        "answer": "Key"
    },
    {
        "question": "What library can help with flattening nested lists?",
        "answer": "itertools"
    },
    {
        "question": "What type of copy duplicates the outer list structure?",
        "answer": "Shallow"
    },
    {
        "question": "What type of copy creates completely independent copies?",
        "answer": "Deep"
    },
    {
        "question": "What function provides a deep copy of a list?",
        "answer": "deepcopy"
    },
    {
        "question": "What does slicing retrieve in a list?",
        "answer": "Subset"
    },
    {
        "question": "What is the result of using list comprehensions with filtering?",
        "answer": "Transformation"
    },
    {
        "question": "What is used to represent multidimensional data in Python?",
        "answer": "Nested list"
    },
    {
        "question": "What operation is used to sort lists with custom logic?",
        "answer": "Lambda"
    },
    {
        "question": "Are list comprehensions more efficient than traditional loops?",
        "answer": "Yes"
    },
    {
        "question": "Are nested lists useful for multidimensional data?",
        "answer": "Yes"
    }
]
