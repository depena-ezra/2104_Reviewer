[
    {
        "question": "What allows controlling the flow of a program in Python?",
        "answer": "Conditionals"
    },
    {
        "question": "What comparison syntax is used for chained comparisons in Python?",
        "answer": "x < y < z"
    },
    {
        "question": "What operator is useful for simple conditions in Python?",
        "answer": "Ternary"
    },
    {
        "question": "Which Python statement is used for pattern matching?",
        "answer": "Match-case"
    },
    {
        "question": "Which function checks if any condition in an iterable is true?",
        "answer": "any"
    },
    {
        "question": "Which function checks if all conditions in an iterable are true?",
        "answer": "all"
    },
    {
        "question": "What helps improve readability by minimizing nested conditionals?",
        "answer": "Early exits"
    },
    {
        "question": "What logical operator combines conditions that must both be true?",
        "answer": "and"
    },
    {
        "question": "What logical operator combines conditions where at least one must be true?",
        "answer": "or"
    },
    {
        "question": "What logical operator negates a condition?",
        "answer": "not"
    },
    {
        "question": "What version of Python introduced the match-case statement?",
        "answer": "3.10"
    },
    {
        "question": "What data structures can be matched with the match-case statement?",
        "answer": "Dictionary"
    },
    {
        "question": "What feature helps ensure concise conditional logic in Python?",
        "answer": "Ternary operator"
    },
    {
        "question": "What Python function evaluates conditions over iterables concisely?",
        "answer": "any"
    },
    {
        "question": "What should be avoided to ensure logical operators are clear?",
        "answer": "Ambiguous expressions"
    }
]
